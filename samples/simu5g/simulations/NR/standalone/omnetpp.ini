[General]
image-path=../../../images
output-scalar-file-append = false
sim-time-limit=20s
**.routingRecorder.enabled = false

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = false

################ Mobility parameters #####################
# *

**.mobility.constraintAreaMaxX = 1000m
**.mobility.constraintAreaMaxY = 1000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### Number of Resource Blocks ################
**.numBands = 50 # this value should be kept equal to the number of RBs

############### Transmission Power ##################
**.ueTxPower = 26
**.eNodeBTxPower = 40
**.targetBler = 0.01
**.blerShift = 5  

############### IPv4 configurator config #################
*.configurator.config = xmldoc("./demo.xml")


#------------------------------------#
# Config Standalone
#
# Topology configuration for the exemplary scenario for NR Standalone deployment
#
[Config Standalone]
network = simu5g.simulations.NR.networks.SingleCell_Standalone
sim-time-limit=20s

############### e/gNodeB configuration #################
*.gnb.mobility.initialX = 450m
*.gnb.mobility.initialY = 300m

############## UE configuration ##################
*.numUe = 1

# connect the UE's NIC to the corresponding serving gNB (NR side only)
*.ue[0].macCellId = 0
*.ue[0].masterId = 0
*.ue[0].nrMacCellId = 1
*.ue[0].nrMasterId = 1

# UE position
*.ue[0].mobility.initialX = 950m
*.ue[0].mobility.initialY = 350m
#------------------------------------#



#------------------------------------#
# Config VoIP-DL
#
# General configuration for Voice-over-IP DL traffic to the UE
# 
[Config VoIP-DL]
extends=Standalone

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1

#============= Application Setup =============
*.ue[*].app[*].typename = "VoIPReceiver"
*.ue[*].app[0].localPort = 3000

*.server.app[*].PacketSize = 40
*.server.app[*].destAddress = "ue[0]" # obtain the address of the client by reading its index in the array of udp Apps
*.server.app[*].localPort = 3088+ancestorIndex(0) 
*.server.app[*].typename = "VoIPSender"
*.server.app[*].startTime = uniform(0s,0.02s)
#------------------------------------#



#------------------------------------#
# Config VoIP-UL
#
# General configuration for Voice-over-IP UL traffic from the UE
# 
[Config VoIP-UL]
extends=Standalone

# one UDP application for each user
*.ue[*].numApps = 1

# the amount of UDP applications on server should be equal to (numUEs)*(ue[*].numApps) 
*.server.numApps = 1

#============= Application Setup =============
*.server.app[*].typename = "VoIPReceiver"
*.server.app[*].localPort = 3000+ancestorIndex(0)

*.ue[*].app[*].PacketSize = 40
# obtain the address of the client by reading its index in the array of udp Apps
*.ue[*].app[*].destAddress = "server" 
*.ue[*].app[*].localPort = 3088+ancestorIndex(0)
*.ue[*].app[*].typename = "VoIPSender"
*.ue[*].app[*].startTime = uniform(0s,0.02s)
#------------------------------------#
[Config RadioLinkCongestion]
extends=Standalone
sim-time-limit=50s

# General Configuration
# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpServerApp"

**.hasTcp = true

# Server Application Configuration
*.server.numApps = 1
*.server.app[0].typename = "TcpClientApp"
SingleCell_Standalone.server.app[0].io.connectAddress = "ue[0]"
SingleCell_Standalone.server.app[0].io.connectPort = 1000
#*.server.tcp.maxSendQueueSize = 5000B   # Increase send queue size (default is 1KB)
SingleCell_Standalone.server.app[0].source.packetLength = 4000000B
SingleCell_Standalone.server.app[0].source.productionInterval = 0.1s
SingleCell_Standalone.ue[0].app[0].connection[0].source.packetLength = 1460B
SingleCell_Standalone.ue[0].app[0].connection[0].source.productionInterval = 0.1s


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100






# gNodeB Radio Link Configuration

**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true





[tacho]
extends=Standalone
sim-time-limit=400s

# Number of UEs
*.ue.numNodes = 1  # Set the number of UEs to 10

#**.tcpType = "TcpReno"

# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpEchoApp"  # UE echoes the received data
*.ue[*].app[0].active = true
*.ue[*].app[0].localPort = 1000  # Listening for incoming connections
*.ue[*].app[0].echoFactor = 1
*.ue[*].app[0].echoDelay = 0s

# Server Configuration
*.server.numApps = 1  # The server sends data
*.server.app[0].typename = "TcpSessionApp"  # The server initiates the connection and sends data
*.server.app[0].active = true
*.server.app[0].localPort = -1
*.server.app[0].connectAddress = "ue[0]"  # The server connects to UE
*.server.app[0].connectPort = 1000
*.server.app[0].tOpen = 0.2s
*.server.app[0].tSend = 0.4s
*.server.app[0].sendBytes = 5000000000B  # 5 GB to send
*.server.app[0].tClose = 400s
#**.gnb.dataRate = 100kbps  # Test with a 500 kbps data rate# Router Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpTahoe"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100

# gNodeB Radio Link Configuration

**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true
[Control]
extends=Standalone
sim-time-limit=150s

# Number of UEs
*.ue.numNodes = 1  # Set the number of UEs to 10

#**.tcpType = "TcpReno"

# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpClientApp"  # UE echoes the received data
*.ue[*].app[0].localPort = 1000  # Listening for incoming connections


# Server Configuration
*.server.numApps = 1  # The server sends data
*.server.app[0].typename = "TcpSessionApp"  # The server initiates the connection and sends data
*.server.app[0].active = true
*.server.app[0].localPort = -1
*.server.app[0].connectAddress = "ue[0]"  # The server connects to UE
*.server.app[0].connectPort = 1000
*.server.app[0].tOpen = 0.2s
*.server.app[0].tSend = 0.4s
*.server.app[0].sendBytes = 10000000000B  # 10 GB to send
*.server.app[0].tClose = 90s
**.gnb.dataRate = 100kbps  # Test with a 500 kbps data rate# Router Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpNoCongestionControl"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100

# gNodeB Radio Link Configuration


**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true


[Config No_Tcpserver]
extends=Standalone
sim-time-limit=60s

# General Configuration
# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpServerApp"

**.hasTcp = true

# Server Application Configuration
*.server.numApps = 1
*.server.app[0].typename = "TcpClientApp"
SingleCell_Standalone.server.app[0].io.connectAddress = "ue[0]"
SingleCell_Standalone.server.app[0].io.connectPort = 1000
#*.server.tcp.maxSendQueueSize = 5000B   # Increase send queue size (default is 1KB)
SingleCell_Standalone.server.app[0].source.packetLength = 40000B
SingleCell_Standalone.server.app[0].source.productionInterval = 0.001s
SingleCell_Standalone.ue[0].app[0].connection[0].source.packetLength = 1460B
SingleCell_Standalone.ue[0].app[0].connection[0].source.productionInterval = 0.1s


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100


**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

[Config TcpNoCongestionControl]
extends=Standalone
sim-time-limit=60s

# General Configuration
# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpServerApp"

**.hasTcp = true

# Server Application Configuration
*.server.numApps = 1
*.server.app[0].typename = "TcpClientApp"
SingleCell_Standalone.server.app[0].io.connectAddress = "ue[0]"
SingleCell_Standalone.server.app[0].io.connectPort = 1000
#*.server.tcp.maxSendQueueSize = 5000B   # Increase send queue size (default is 1KB)
SingleCell_Standalone.server.app[0].source.packetLength = 40000B
SingleCell_Standalone.server.app[0].source.productionInterval = 0.001s
SingleCell_Standalone.ue[0].app[0].connection[0].source.packetLength = 1460B
SingleCell_Standalone.ue[0].app[0].connection[0].source.productionInterval = 0.1s


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100


**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true


[Config try]


extends=Standalone
sim-time-limit=150s

# General Configuration
# UE Application Configuration

**.hasTcp = true

# Server Application Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpNoCongestionControl"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100


**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true




**.numApps = 1
**.client*.app[*].typename = "TcpSessionApp"
**.client*.app[0].localPort = -1
**.client*.app[0].connectAddress = "server"
**.client*.app[0].connectPort = 1000
**.client*.app[0].tOpen = 0.2s
**.client*.app[0].tSend = 0.4s
**.client*.app[0].sendBytes = 2000000B
**.client*.app[0].sendScript = ""
**.client*.app[0].tClose = 25s

**.server*.app[*].typename = "TcpEchoApp"
**.server*.app[0].localPort = 1000
**.server*.app[0].echoFactor = 2.0
**.server*.app[0].echoDelay = 0s






[TcpReno]
extends=Standalone
sim-time-limit=100s

# Number of UEs
*.ue.numNodes = 1  # Set the number of UEs to 10

#**.tcpType = "TcpReno"

# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpEchoApp"  # UE echoes the received data
*.ue[*].app[0].active = true
*.ue[*].app[0].localPort = 1000  # Listening for incoming connections
*.ue[*].app[0].echoFactor = 1
*.ue[*].app[0].echoDelay = 0s

# Server Configuration
*.server.numApps = 1  # The server sends data
*.server.app[0].typename = "TcpSessionApp"  # The server initiates the connection and sends data
*.server.app[0].active = true
*.server.app[0].localPort = -1
*.server.app[0].connectAddress = "ue[0]"  # The server connects to UE
*.server.app[0].connectPort = 1000
*.server.app[0].tOpen = 0.2s
*.server.app[0].tSend = 0.4s
*.server.app[0].sendBytes = 50000000B  # 5 GB to send
*.server.app[0].tClose = 400s
#**.gnb.dataRate = 100kbps  # Test with a 500 kbps data rate# Router Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100

# gNodeB Radio Link Configuration

**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${configname}.sca
output-vector-file = ${resultdir}/${configname}/${configname}.vec
seed-set = ${repetition}
**.vector-recording = true





[TcpTahoe]
extends=Standalone
sim-time-limit=400s

# Number of UEs
*.ue.numNodes = 1  # Set the number of UEs to 10

#**.tcpType = "TcpReno"

# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpEchoApp"  # UE echoes the received data
*.ue[*].app[0].active = true
*.ue[*].app[0].localPort = 1000  # Listening for incoming connections
*.ue[*].app[0].echoFactor = 1
*.ue[*].app[0].echoDelay = 0s

# Server Configuration
*.server.numApps = 1  # The server sends data
*.server.app[0].typename = "TcpSessionApp"  # The server initiates the connection and sends data
*.server.app[0].active = true
*.server.app[0].localPort = -1
*.server.app[0].connectAddress = "ue[0]"  # The server connects to UE
*.server.app[0].connectPort = 1000
*.server.app[0].tOpen = 0.2s
*.server.app[0].tSend = 0.4s
*.server.app[0].sendBytes = 5000000000B  # 5 GB to send
*.server.app[0].tClose = 400s
#**.gnb.dataRate = 100kbps  # Test with a 500 kbps data rate# Router Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpTahoe"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100

# gNodeB Radio Link Configuration

**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${configname}.sca
output-vector-file = ${resultdir}/${configname}/${configname}.vec
seed-set = ${repetition}


[TcpNewReno]
extends=Standalone
sim-time-limit=400s

# Number of UEs
*.ue.numNodes = 1  # Set the number of UEs to 10

#**.tcpType = "TcpReno"

# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpEchoApp"  # UE echoes the received data
*.ue[*].app[0].active = true
*.ue[*].app[0].localPort = 1000  # Listening for incoming connections
*.ue[*].app[0].echoFactor = 1
*.ue[*].app[0].echoDelay = 0s

# Server Configuration
*.server.numApps = 1  # The server sends data
*.server.app[0].typename = "TcpSessionApp"  # The server initiates the connection and sends data
*.server.app[0].active = true
*.server.app[0].localPort = -1
*.server.app[0].connectAddress = "ue[0]"  # The server connects to UE
*.server.app[0].connectPort = 1000
*.server.app[0].tOpen = 0.2s
*.server.app[0].tSend = 0.4s
*.server.app[0].sendBytes = 50000000B  # 5 GB to send
*.server.app[0].tClose = 400s
#**.gnb.dataRate = 100kbps  # Test with a 500 kbps data rate# Router Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpNewReno"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100

# gNodeB Radio Link Configuration

**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${configname}.sca
output-vector-file = ${resultdir}/${configname}/${configname}.vec
seed-set = ${repetition}


[DumbTcp]
extends=Standalone
sim-time-limit=400s

# Number of UEs
*.ue.numNodes = 1  # Set the number of UEs to 10

#**.tcpType = "TcpReno"

# UE Application Configuration
*.ue[*].numApps = 1
*.ue[*].app[0].typename = "TcpEchoApp"  # UE echoes the received data
*.ue[*].app[0].active = true
*.ue[*].app[0].localPort = 1000  # Listening for incoming connections
*.ue[*].app[0].echoFactor = 1
*.ue[*].app[0].echoDelay = 0s

# Server Configuration
*.server.numApps = 1  # The server sends data
*.server.app[0].typename = "TcpSessionApp"  # The server initiates the connection and sends data
*.server.app[0].active = true
*.server.app[0].localPort = -1
*.server.app[0].connectAddress = "ue[0]"  # The server connects to UE
*.server.app[0].connectPort = 1000
*.server.app[0].tOpen = 0.2s
*.server.app[0].tSend = 0.4s
*.server.app[0].sendBytes = 5000000000B  # 5 GB to send
*.server.app[0].tClose = 400s
#**.gnb.dataRate = 100kbps  # Test with a 500 kbps data rate# Router Configuration


# tcp settings
**.tcp.typename = "Tcp"
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "DumbTcp"                 # TcpReno/TcpTahoe/TcpNewReno/TcpNoCongestionControl/DumbTcp
description = "Window_Scale_enabled"
**.tcp.windowScalingSupport = true
**.tcp.advertisedWindow = 65535*100

# gNodeB Radio Link Configuration

**.gnb[*].recordStatisticVectors = true  # Enable recording of statistic vectors
**.gnb[*].rlcPacketLossUl.record = true  # Ensure uplink packet loss is recorded
**.gnb[*].rlcPacketLossDl.record = true  # Ensure downlink packet loss is recorded
output-scalar-file = ${resultdir}/${configname}/${configname}.sca
output-vector-file = ${resultdir}/${configname}/${configname}.vec
seed-set = ${repetition}
